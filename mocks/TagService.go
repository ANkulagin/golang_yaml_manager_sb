// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TagService is an autogenerated mock type for the TagService type
type TagService struct {
	mock.Mock
}

// ExtractTagsFromPath provides a mock function with given fields: filePath, srcDir
func (_m *TagService) ExtractTagsFromPath(filePath string, srcDir string) []string {
	ret := _m.Called(filePath, srcDir)

	if len(ret) == 0 {
		panic("no return value specified for ExtractTagsFromPath")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func(string, string) []string); ok {
		r0 = rf(filePath, srcDir)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// NewTagService creates a new instance of TagService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTagService(t interface {
	mock.TestingT
	Cleanup(func())
}) *TagService {
	mock := &TagService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
